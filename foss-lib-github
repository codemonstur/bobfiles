build
    info [${PROJECT_NAME}] Building
    run-task -i clean build

-- Generates release notes in src/docs/releases/release-{version}.txt
release-notes
    info [${PROJECT_NAME}] Writing release notes to src/docs/releases/release-${PROJECT_VERSION}.txt
    echo ${PROJECT_VERSION} > src/docs/releases/release-${PROJECT_VERSION}.txt
    echo "" >> src/docs/releases/release-${PROJECT_VERSION}.txt
    PREVIOUS_TAG = `git tag | sort -r | head -n 1`
    git log --pretty="%s" ${PREVIOUS_TAG}... master >> src/docs/releases/release-${PROJECT_VERSION}.txt

-- Removes the current tag from git locally and remotely
remove-tag
    git tag -d ${PROJECT_NAME}-${PROJECT_VERSION}
    git push --delete origin ${PROJECT_NAME}-${PROJECT_VERSION}

-- Performs; clean, build, tag repo with version, push and finally upload binaries to Github
deploy
    info [${PROJECT_NAME}] Clean and build for deploy
    run-task -i clean build
    info [${PROJECT_NAME}] Tagging and pushing to github
    git tag ${PROJECT_NAME}-${PROJECT_VERSION}
    git push && git push --tags
    info [${PROJECT_NAME}] Creating github release
    hub release create -a target/${PROJECT_NAME}.jar -F src/docs/releases/release-${PROJECT_VERSION}.txt ${PROJECT_NAME}-${PROJECT_VERSION}

-- Attempts to turn local build jar into native executable using Graal RC 14
native
    docker run -it --mount type=bind,src=`pwd`,dst=/data -w /data oracle/graalvm-ce:1.0.0-rc14 native-image --static --no-server -jar target/${PROJECT_NAME}.jar target/${PROJECT_NAME}
